"""Initial migration

Revision ID: 5c6563c7ae29
Revises: 
Create Date: 2025-10-26 14:39:46.383097

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c6563c7ae29'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('station_name', sa.String(length=50), nullable=False, comment='车站名称'),
    sa.Column('city', sa.String(length=50), nullable=False, comment='所属城市'),
    sa.Column('pinyin', sa.String(length=50), nullable=False, comment='拼音（用于搜索）'),
    sa.Column('short_pinyin', sa.String(length=10), nullable=False, comment='简拼（用于搜索）'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('station_name')
    )
    op.create_index(op.f('ix_stations_id'), 'stations', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False, comment='登录名'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='密码（加密）'),
    sa.Column('real_name', sa.String(length=50), nullable=False, comment='真实姓名'),
    sa.Column('id_type', sa.String(length=20), nullable=False, comment='证件类型'),
    sa.Column('id_number', sa.String(length=50), nullable=False, comment='证件号码'),
    sa.Column('phone', sa.String(length=11), nullable=False, comment='手机号'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='邮箱'),
    sa.Column('user_type', sa.String(length=20), nullable=False, comment='用户类型（成人/学生）'),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('update_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_id_number'), 'users', ['id_number'], unique=True)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('passengers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='关联用户ID'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='姓名'),
    sa.Column('id_type', sa.String(length=20), nullable=False, comment='证件类型'),
    sa.Column('id_number', sa.String(length=50), nullable=False, comment='证件号码'),
    sa.Column('phone', sa.String(length=11), nullable=False, comment='手机号'),
    sa.Column('passenger_type', sa.String(length=20), nullable=False, comment='旅客类型（成人/学生/儿童）'),
    sa.Column('verified', sa.Boolean(), nullable=True, comment='是否已验证'),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'id_number', name='uix_user_passenger')
    )
    op.create_index(op.f('ix_passengers_id'), 'passengers', ['id'], unique=False)
    op.create_index(op.f('ix_passengers_user_id'), 'passengers', ['user_id'], unique=False)
    op.create_table('trains',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('train_number', sa.String(length=10), nullable=False, comment='车次号（如G1234）'),
    sa.Column('train_type', sa.String(length=10), nullable=False, comment='车次类型（高铁/动车/直达）'),
    sa.Column('departure_station_id', sa.Integer(), nullable=False, comment='出发站ID'),
    sa.Column('arrival_station_id', sa.Integer(), nullable=False, comment='到达站ID'),
    sa.Column('departure_time', sa.Time(), nullable=False, comment='出发时间'),
    sa.Column('arrival_time', sa.Time(), nullable=False, comment='到达时间'),
    sa.Column('duration_minutes', sa.Integer(), nullable=False, comment='历时（分钟）'),
    sa.Column('first_class_seats', sa.Integer(), nullable=True, comment='一等座总数'),
    sa.Column('second_class_seats', sa.Integer(), nullable=True, comment='二等座总数'),
    sa.Column('soft_sleeper_seats', sa.Integer(), nullable=True, comment='软卧总数'),
    sa.Column('hard_sleeper_seats', sa.Integer(), nullable=True, comment='硬卧总数'),
    sa.Column('first_class_price', sa.Numeric(precision=10, scale=2), nullable=True, comment='一等座票价'),
    sa.Column('second_class_price', sa.Numeric(precision=10, scale=2), nullable=True, comment='二等座票价'),
    sa.Column('soft_sleeper_price', sa.Numeric(precision=10, scale=2), nullable=True, comment='软卧票价'),
    sa.Column('hard_sleeper_price', sa.Numeric(precision=10, scale=2), nullable=True, comment='硬卧票价'),
    sa.ForeignKeyConstraint(['arrival_station_id'], ['stations.id'], ),
    sa.ForeignKeyConstraint(['departure_station_id'], ['stations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trains_id'), 'trains', ['id'], unique=False)
    op.create_index(op.f('ix_trains_train_number'), 'trains', ['train_number'], unique=True)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_number', sa.String(length=50), nullable=False, comment='订单号（唯一标识）'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('train_id', sa.Integer(), nullable=False, comment='车次ID'),
    sa.Column('travel_date', sa.Date(), nullable=False, comment='乘车日期'),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False, comment='订单总价'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='订单状态'),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('pay_time', sa.DateTime(timezone=True), nullable=True, comment='支付时间'),
    sa.Column('cancel_time', sa.DateTime(timezone=True), nullable=True, comment='取消时间'),
    sa.ForeignKeyConstraint(['train_id'], ['trains.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_order_number'), 'orders', ['order_number'], unique=True)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.create_table('seats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('train_id', sa.Integer(), nullable=False, comment='车次ID'),
    sa.Column('travel_date', sa.Date(), nullable=False, comment='乘车日期'),
    sa.Column('seat_type', sa.String(length=20), nullable=False, comment='座位类型（一等座/二等座/软卧/硬卧）'),
    sa.Column('seat_number', sa.String(length=10), nullable=False, comment='座位号（如1车01A）'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='状态（可售/已售/已锁定）'),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True, comment='锁定截止时间（订单未支付时锁定）'),
    sa.ForeignKeyConstraint(['train_id'], ['trains.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_seat_availability', 'seats', ['train_id', 'travel_date', 'seat_type', 'status'], unique=False)
    op.create_index(op.f('ix_seats_id'), 'seats', ['id'], unique=False)
    op.create_table('order_passengers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False, comment='订单ID'),
    sa.Column('passenger_id', sa.Integer(), nullable=False, comment='乘客ID'),
    sa.Column('seat_id', sa.Integer(), nullable=False, comment='座位ID'),
    sa.Column('ticket_type', sa.String(length=20), nullable=False, comment='票种（成人票/学生票/儿童票）'),
    sa.Column('seat_type', sa.String(length=20), nullable=False, comment='席别（一等座/二等座/软卧/硬卧）'),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False, comment='票价'),
    sa.Column('refund_status', sa.String(length=20), nullable=True, comment='退票状态（未退票/已退票）'),
    sa.Column('refund_time', sa.DateTime(timezone=True), nullable=True, comment='退票时间'),
    sa.Column('refund_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='退款金额'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['passenger_id'], ['passengers.id'], ),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_passengers_id'), 'order_passengers', ['id'], unique=False)
    op.create_index(op.f('ix_order_passengers_order_id'), 'order_passengers', ['order_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_passengers_order_id'), table_name='order_passengers')
    op.drop_index(op.f('ix_order_passengers_id'), table_name='order_passengers')
    op.drop_table('order_passengers')
    op.drop_index(op.f('ix_seats_id'), table_name='seats')
    op.drop_index('ix_seat_availability', table_name='seats')
    op.drop_table('seats')
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_number'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_trains_train_number'), table_name='trains')
    op.drop_index(op.f('ix_trains_id'), table_name='trains')
    op.drop_table('trains')
    op.drop_index(op.f('ix_passengers_user_id'), table_name='passengers')
    op.drop_index(op.f('ix_passengers_id'), table_name='passengers')
    op.drop_table('passengers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_id_number'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_stations_id'), table_name='stations')
    op.drop_table('stations')
    # ### end Alembic commands ###

